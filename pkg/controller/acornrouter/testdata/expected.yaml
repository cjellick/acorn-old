kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: app-name-app-namespace-1234567890ab
  namespace: acorn-system
  labels:
    acorn.io/app-name: app-name
    acorn.io/app-namespace: app-namespace
    acorn.io/managed: "true"
    acorn.io/acorn-name: app-name
spec:
  selector:
    matchLabels:
      acorn.io/app-name: app-name
      acorn.io/app-namespace: app-namespace
      acorn.io/acorn-name: app-name
      acorn.io/managed: "true"
  template:
    metadata:
      labels:
        acorn.io/app-name: app-name
        acorn.io/app-namespace: app-namespace
        acorn.io/acorn-name: app-name
        acorn.io/managed: "true"
    spec:
      automountServiceAccountToken: false
      containers:
        - name: port-81
          image: rancher/klipper-lb:v0.3.4
          env:
            - name: "SRC_PORT"
              value: "81"
            - name: "DEST_PROTO"
              value: "tcp"
            - name: "DEST_PORT"
              value: "81"
            - name: "DEST_IPS"
              value: "1.1.1.1 1::1"
          ports:
            - containerPort: 81
              protocol: TCP
          securityContext:
            capabilities:
              add:
                - NET_ADMIN
        - name: port-91
          image: rancher/klipper-lb:v0.3.4
          env:
            - name: "SRC_PORT"
              value: "91"
            - name: "DEST_PROTO"
              value: "tcp"
            - name: "DEST_PORT"
              value: "91"
            - name: "DEST_IPS"
              value: "1.1.1.1 1::1"
          ports:
            - containerPort: 91
              protocol: TCP
          securityContext:
            capabilities:
              add:
                - NET_ADMIN

---
# this is example of how exposing an acorn as a service in the k8s. key to composition
kind: Service
apiVersion: v1
metadata:
  name: app-name
  namespace: app-namespace
  labels:
    acorn.io/app-name: app-name
    acorn.io/app-namespace: app-namespace
    acorn.io/acorn-name: app-name
    acorn.io/managed: "true"
spec:
  type: ExternalName
  externalName: app-name-app-namespace-1234567890ab.acorn-system.svc.cluster.local

---
kind: Service
apiVersion: v1
metadata:
  name: app-name-app-namespace-1234567890ab
  namespace: acorn-system
  labels:
    acorn.io/app-name: app-name
    acorn.io/app-namespace: app-namespace
    acorn.io/acorn-name: app-name
    acorn.io/managed: "true"
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 81
    protocol: TCP
    appProtocol: HTTPS
    name: "80"
  - port: 90
    targetPort: 91
    protocol: TCP
    name: "90"
  internalTrafficPolicy: Local
  selector:
    acorn.io/app-name: app-name
    acorn.io/app-namespace: app-namespace
    acorn.io/acorn-name: app-name
    acorn.io/managed: "true"